{"uid":"a2e7e18a575221c7","name":"Create new user","fullName":"tests.users.test_user.TestUsers#test_create_user","historyId":"069fddb73f0e80f08ad3499c8d1c22f3","time":{"start":1761074886460,"stop":1761074886466,"duration":6},"status":"broken","statusMessage":"httpx.ConnectError: [Errno 111] Connection refused","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py:250: in handle_request\n    resp = self._pool.handle_request(req)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection_pool.py:256: in handle_request\n    raise exc from None\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection_pool.py:236: in handle_request\n    response = connection.handle_request(\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection.py:101: in handle_request\n    raise exc\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection.py:78: in handle_request\n    stream = self._connect(request)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection.py:124: in _connect\n    stream = self._network_backend.connect_tcp(**kwargs)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_backends/sync.py:207: in connect_tcp\n    with map_exceptions(exc_map):\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/contextlib.py:153: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'TimeoutError'>: <class 'httpcore.ConnectTimeout'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno 111] Connection refused\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.users.test_user.TestUsers object at 0x7fcd0707b6a0>\nemail = 'mail.ru'\npublic_users_client = <clients.users.public_users_client.PublicUsersClient object at 0x7fcd069fa170>\n\n    @allure.title(\"Create new user\")\n    @allure.tag(AllureTags.CREATE_ENTITY)\n    @allure.story(AllureStory.CREATE_ENTITY)\n    @allure.sub_suite(AllureStory.CREATE_ENTITY)\n    @allure.severity(Severity.BLOCKER)\n    @pytest.mark.parametrize('email', ['mail.ru', 'gmail.com', 'example.com'])\n    def test_create_user(self, email: str, public_users_client: PublicUsersClient):\n        request = CreateUserRequestSchema(email=fake.email(domain=email))\n>       response = public_users_client.create_user_api(request)\n\ntests/users/test_user.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nclients/users/public_users_client.py:21: in create_user_api\n    return self.post(url=APIRoutes.USERS, json=request.model_dump(by_alias=True))\nclients/api_client.py:38: in post\n    return self.client.post(url, json=json, data=data, files=files)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:1144: in post\n    return self.request(\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py:249: in handle_request\n    with map_httpcore_exceptions():\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/contextlib.py:153: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno 111] Connection refused\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py:118: ConnectError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761074885351,"stop":1761074885353,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"save_allure_environment_file","time":{"start":1761074885353,"stop":1761074885353,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"public_users_client","time":{"start":1761074886439,"stop":1761074886460,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectError: [Errno 111] Connection refused","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py:250: in handle_request\n    resp = self._pool.handle_request(req)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection_pool.py:256: in handle_request\n    raise exc from None\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection_pool.py:236: in handle_request\n    response = connection.handle_request(\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection.py:101: in handle_request\n    raise exc\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection.py:78: in handle_request\n    stream = self._connect(request)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_sync/connection.py:124: in _connect\n    stream = self._network_backend.connect_tcp(**kwargs)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_backends/sync.py:207: in connect_tcp\n    with map_exceptions(exc_map):\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/contextlib.py:153: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'TimeoutError'>: <class 'httpcore.ConnectTimeout'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno 111] Connection refused\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.users.test_user.TestUsers object at 0x7fcd0707b6a0>\nemail = 'mail.ru'\npublic_users_client = <clients.users.public_users_client.PublicUsersClient object at 0x7fcd069fa170>\n\n    @allure.title(\"Create new user\")\n    @allure.tag(AllureTags.CREATE_ENTITY)\n    @allure.story(AllureStory.CREATE_ENTITY)\n    @allure.sub_suite(AllureStory.CREATE_ENTITY)\n    @allure.severity(Severity.BLOCKER)\n    @pytest.mark.parametrize('email', ['mail.ru', 'gmail.com', 'example.com'])\n    def test_create_user(self, email: str, public_users_client: PublicUsersClient):\n        request = CreateUserRequestSchema(email=fake.email(domain=email))\n>       response = public_users_client.create_user_api(request)\n\ntests/users/test_user.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nclients/users/public_users_client.py:21: in create_user_api\n    return self.post(url=APIRoutes.USERS, json=request.model_dump(by_alias=True))\nclients/api_client.py:38: in post\n    return self.client.post(url, json=json, data=data, files=files)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:1144: in post\n    return self.request(\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py:249: in handle_request\n    with map_httpcore_exceptions():\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/contextlib.py:153: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno 111] Connection refused\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py:118: ConnectError","steps":[{"name":"Create user","time":{"start":1761074886464,"stop":1761074886466,"duration":2},"status":"broken","statusMessage":"httpx.ConnectError: [Errno 111] Connection refused\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/autotest_api/autotest_api/clients/users/public_users_client.py\", line 21, in create_user_api\n    return self.post(url=APIRoutes.USERS, json=request.model_dump(by_alias=True))\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/autotest_api/autotest_api/clients/api_client.py\", line 38, in post\n    return self.client.post(url, json=json, data=data, files=files)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 1144, in post\n    return self.request(\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 825, in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 914, in send\n    response = self._send_handling_auth(\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 942, in _send_handling_auth\n    response = self._send_handling_redirects(\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 979, in _send_handling_redirects\n    response = self._send_single_request(request)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 1014, in _send_single_request\n    response = transport.handle_request(request)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py\", line 249, in handle_request\n    with map_httpcore_exceptions():\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py\", line 118, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\n","steps":[{"name":"Make POST request to '/api/v1/users'","time":{"start":1761074886464,"stop":1761074886465,"duration":1},"status":"broken","statusMessage":"httpx.ConnectError: [Errno 111] Connection refused\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/autotest_api/autotest_api/clients/api_client.py\", line 38, in post\n    return self.client.post(url, json=json, data=data, files=files)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 1144, in post\n    return self.request(\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 825, in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 914, in send\n    response = self._send_handling_auth(\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 942, in _send_handling_auth\n    response = self._send_handling_redirects(\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 979, in _send_handling_redirects\n    response = self._send_single_request(request)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_client.py\", line 1014, in _send_single_request\n    response = transport.handle_request(request)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py\", line 249, in handle_request\n    with map_httpcore_exceptions():\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/httpx/_transports/default.py\", line 118, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\n","steps":[],"attachments":[{"uid":"33d3f49027aa3a3b","name":"cURL command","source":"33d3f49027aa3a3b.txt","type":"text/plain","size":407}],"parameters":[{"name":"url","value":"'/api/v1/users'"},{"name":"json","value":"{'email': 'campbelljames@mail.ru', 'password': 'h&@u4!ouJY', 'lastName': 'Walsh', 'firstName': 'Suzanne', 'middleName': 'Linda'}"},{"name":"data","value":"None"},{"name":"files","value":"None"}],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"request","value":"CreateUserRequestSchema(email='campbelljames@mail.ru', password='h&@u4!ouJY', last_name='Walsh', first_name='Suzanne', middle_name='Linda')"}],"stepsCount":1,"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a73a46a99b8c8e63","name":"log","source":"a73a46a99b8c8e63.txt","type":"text/plain","size":94}],"parameters":[],"stepsCount":2,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"save_allure_environment_file::0","time":{"start":1761074886713,"stop":1761074886714,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"subSuite","value":"Create entity"},{"name":"tag","value":"CREATE_ENTITY"},{"name":"parentSuite","value":"LMS service"},{"name":"tag","value":"USERS"},{"name":"feature","value":"Users"},{"name":"severity","value":"blocker"},{"name":"epic","value":"LMS service"},{"name":"suite","value":"Users"},{"name":"story","value":"Create entity"},{"name":"tag","value":"REGRESSION"},{"name":"tag","value":"regression"},{"name":"tag","value":"users"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2450-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.users.test_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'mail.ru'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["REGRESSION","regression","CREATE_ENTITY","USERS","users"]},"source":"a2e7e18a575221c7.json","parameterValues":["'mail.ru'"]}